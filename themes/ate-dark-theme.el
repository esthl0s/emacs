(deftheme ate-dark
  "Custom theme by Andrew Erlanger.")

(custom-theme-set-faces
 'ate-dark
 ;;; emacs general
 '(default ((t (:background "black" :foreground "white"))))
 '(dired-directory ((t (:foreground "blue"))))
 '(error ((t (:foreground "red" :weight bold))))
 '(font-lock-builtin-face ((t (:foreground "blue"))))
 '(font-lock-comment-face ((t (:foreground "yellow"))))
 '(font-lock-constant-face ((t (:foreground "yellow"))))
 '(font-lock-doc-face ((t (:foreground "red"))))
 '(font-lock-function-name-face ((t (:foreground "red"))))
 '(font-lock-keyword-face ((t (:foreground "green"))))
 '(font-lock-preprocessor-face ((t (:foreground "cornflower blue"))))
 '(font-lock-string-face ((t (:foreground "cyan"))))
 '(font-lock-type-face ((t (:foreground "magenta"))))
 '(font-lock-variable-name-face ((t (:foreground "green"))))
 '(font-lock-warning-face ((t (:foreground "red"))))
 '(gnus-button ((t (:inherit button))))
 '(highlight ((t (:background "white" :foreground "black"))))
 '(hl-line ((t (:background "grey25"))))
 '(hl-paren-face ((t (:weight bold))) t)
 '(icomplete-first-match ((t (:foreground "deep sky blue" :weight bold))))
 '(lusty-file-face ((t (:foreground "SpringGreen1"))) t)
 '(magit-header ((t (:box 1 :weight bold))))
 '(magit-section-title ((t (:inherit magit-header
							:background "dark slate blue"))))
 '(menu ((t (:background "gray30" :foreground "gray70"))))
 '(region ((t (:background "magenta" :foreground "white"))))
 '(scroll-bar ((t (:background "gray20" :foreground "dark turquoise"))))
 '(secondary-selection ((t (:background "green" :foreground "black"))))
 '(show-paren-match ((t (:background "green"))))
 '(show-paren-mismatch ((t (:background "red"))))
 '(th-sentence-hl-face ((t (:weight bold))))
 '(window-number-face ((t (:foreground "red" :weight bold))))
 ;;; whitespace
 '(whitespace-line ((t (:background "yellow" :foreground "white"))))
 '(trailing-whitespace ((t (:background "white"))))
 ;;; ido
 '(ido-first-match ((t (:foreground "turquoise" :weight bold))))
 '(ido-only-match ((t (:foreground "medium spring green" :weight bold))))
 '(ido-subdir ((t (:inherit dired-directory :weight normal))))
 ;;; Minibuffer and mode line
 '(minibuffer-prompt ((t (:foreground "red"))))
 '(mode-line ((t (:background "green"
				  :foreground "black"))))
 '(mode-line-inactive ((t (:inherit mode-line
						   :background "magenta"
						   :foreground "white"))))
 ;;; General outlining
 '(outline-1 ((t (:foreground "red"))))
 '(outline-2 ((t (:foreground "yellow"))))
 '(outline-3 ((t (:foreground "yellow" :weight bold))))
 '(outline-4 ((t (:foreground "green"))))
 '(outline-5 ((t (:foreground "blue"))))
 '(outline-6 ((t (:foreground "cyan" :weight bold))))
 '(outline-7 ((t (:foreground "magenta" :weight bold))))
 '(outline-8 ((t (:foreground "red" :weight bold))))
 ;;; Org mode
 '(org-default ((t (:inherit default))))
 '(org-hide ((t (:inherit mode-line-inactive))))
 '(org-level-1 ((t (:inherit outline-1))))
 '(org-level-2 ((t (:inherit outline-2))))
 '(org-level-3 ((t (:inherit outline-3))))
 '(org-level-4 ((t (:inherit outline-4))))
 '(org-level-5 ((t (:inherit outline-5))))
 '(org-level-6 ((t (:inherit outline-6))))
 '(org-level-7 ((t (:inherit outline-7))))
 '(org-level-8 ((t (:inherit outline-8))))
 '(org-special-keyword ((t (:inherit font-lock-keyword-face))))
 '(org-warning ((t (:foreground "red"))))
 '(org-agenda-structure ((t (:foreground "blue"))))
 '(org-agenda-calendar-event ((t nil)))
 '(org-agenda-date ((t (:foreground "yellow"))))
 '(org-agenda-date-today ((t (:foreground "magenta"))))
 '(org-agenda-date-weekend ((t (:inherit org-agenda-date))))
 '(org-agenda-done ((t (:foreground "green"))))
 '(org-agenda-restriction-lock ((t (:background "#FFB273"))))
 '(org-agenda-dimmed-todo-face ((t (:foreground "blue"))))
 '(org-date ((t (:foreground "magenta"))))
 '(org-done ((t (:foreground "green"))))
 '(org-drawer ((t (:foreground "#2A4480"))))
 '(org-ellipsis ((t (:foreground "magenta"))))
 '(org-footnote ((t (:foreground "white"))))
  '(org-scheduled-previously ((t (:foreground "#FF7400"))))
 '(org-tag ((t (:weight bold))))
 '(org-todo ((t (:foreground "red"))))
  ;;; Rainbow delimiter font locks
 ;;; Order generated by add-three transitive group action
 ;;; on Z/7Z to ensure neighboring colors contrast
 '(rainbow-delimiters-depth-1-face ((t (:inherit outline-1))))
 '(rainbow-delimiters-depth-2-face ((t (:inherit outline-4))))
 '(rainbow-delimiters-depth-3-face ((t (:inherit outline-7))))
 '(rainbow-delimiters-depth-4-face ((t (:inherit outline-3))))
 '(rainbow-delimiters-depth-5-face ((t (:inherit outline-6))))
 '(rainbow-delimiters-depth-6-face ((t (:inherit outline-2))))
 '(rainbow-delimiters-depth-7-face ((t (:inherit outline-5))))
 '(rainbow-delimiters-depth-8-face ((t (:inherit outline-1))))
 '(rainbow-delimiters-depth-9-face ((t (:inherit outline-4)))))

(provide-theme 'ate-dark)

;; Local Variables:
;; no-byte-compile: t
;; End:

;;; ate-dark-theme.el ends here
